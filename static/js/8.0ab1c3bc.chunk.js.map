{"version":3,"sources":["slides/memo/example/Old.jsx","slides/memo/example/New.jsx","slides/memo/example/Example.jsx","slides/memo/Memo.jsx","slides/memo/example/code.js"],"names":["timesRendered","Old","_React$useState","React","useState","_React$useState2","Object","slicedToArray","clickCount","increment","react_default","a","createElement","baseComponents","onClick","react_animation","animationIn","New","memo","Wrapper","styled","div","_templateObject","ParentWrapper","_templateObject2","Example","justify","size","example_Old","example_New","Memo","components","namedNav","name","heading","withImage","prism","language","style","okaidia","example_Example","customDot"],"mappings":"oLAIIA,EAAgB,EAiBLC,EAfH,WACVD,IADgB,IAAAE,EAGgBC,IAAMC,SAAS,GAH/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAGTM,EAHSH,EAAA,GAGGI,EAHHJ,EAAA,GAKhB,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,QAAS,kBAAML,EAAUD,EAAa,KACnDE,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACG,EAAA,gBAAD,CAAiBC,YAAY,YAC3BN,EAAAC,EAAAC,cAAA,UAAKZ,MCXTA,EAAgB,EAiBLiB,EAfHd,IAAMe,KAAK,WACrBlB,IAD2B,IAAAE,EAGKC,IAAMC,SAAS,GAHpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAGpBM,EAHoBH,EAAA,GAGRI,EAHQJ,EAAA,GAK3B,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,QAAS,kBAAML,EAAUD,EAAa,KACnDE,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACG,EAAA,gBAAD,CAAiBC,YAAY,YAC3BN,EAAAC,EAAAC,cAAA,UAAKZ,kQCRb,IAAMmB,EAAUC,UAAOC,IAAVC,KAKPC,EAAgBH,UAAOC,IAAVG,KAKfxB,EAAgB,EAwCLyB,EAtCCtB,IAAMe,KAAK,WACzBlB,IAD+B,IAAAE,EAGCC,IAAMC,SAAS,GAHhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAGxBM,EAHwBH,EAAA,GAGZI,EAHYJ,EAAA,GAK/B,OACEK,EAAAC,EAAAC,cAACO,EAAD,KACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASa,QAAQ,UACfhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACG,EAAA,gBAAD,CAAiBC,YAAY,YAC3BN,EAAAC,EAAAC,cAAA,UAAKZ,IAEPU,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,QAAS,WACPL,EAAUD,EAAa,KAGzBE,EAAAC,EAAAC,cAAA,wBAKRF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASa,QAAQ,UACfhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASc,KAAM,GACbjB,EAAAC,EAAAC,cAACgB,EAAD,OAEFlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASc,KAAM,IACfjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASc,KAAM,GACbjB,EAAAC,EAAAC,cAACiB,EAAD,WCPKC,UAnCF,kBACXpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAWC,UAAQ,GACjBtB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,QAAQC,QAAQ,OAAOC,WAAS,GAC1CzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,0CACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,0CACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,0DAGJH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,OAAOC,QAAQ,OAAOC,WAAS,GACzCzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAmBC,SAAS,MAAMC,MAAOC,KCH1B,iRDMf7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAmBC,SAAS,MAAMC,MAAOC,KCrB3B,0QDyBhB7B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,UAAUC,QAAQ,OAAOC,WAAS,GAC5CzB,EAAAC,EAAAC,cAAC4B,EAAD,OAEF9B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,UAAUC,QAAQ,OAAOC,WAAS,GAC5CzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU4B,UAAU,QAApB,0DAGA/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU4B,UAAU,QAApB,gFAIA/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU4B,UAAU,SAApB","file":"static/js/8.0ab1c3bc.chunk.js","sourcesContent":["import React from \"react\";\nimport { AnimateOnChange } from \"@nearform/react-animation\";\nimport { PrimaryButton } from \"../../../baseComponents\";\n\nlet timesRendered = 0;\n\nconst Old = () => {\n  timesRendered++;\n\n  const [clickCount, increment] = React.useState(0);\n\n  return (\n    <PrimaryButton onClick={() => increment(clickCount + 1)}>\n      <h2>No memo()</h2>\n      <AnimateOnChange animationIn=\"bounceIn\">\n        <h1>{timesRendered}</h1>\n      </AnimateOnChange>\n    </PrimaryButton>\n  );\n};\n\nexport default Old;\n","import React from \"react\";\nimport { AnimateOnChange } from \"@nearform/react-animation\";\nimport { PrimaryButton } from \"../../../baseComponents\";\n\nlet timesRendered = 0;\n\nconst New = React.memo(() => {\n  timesRendered++;\n\n  const [clickCount, increment] = React.useState(0);\n\n  return (\n    <PrimaryButton onClick={() => increment(clickCount + 1)}>\n      <h2>With memo()</h2>\n      <AnimateOnChange animationIn=\"bounceIn\">\n        <h1>{timesRendered}</h1>\n      </AnimateOnChange>\n    </PrimaryButton>\n  );\n});\n\nexport default New;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AnimateOnChange } from \"@nearform/react-animation\";\nimport { GridRow, GridCol, PrimaryButton } from \"../../../baseComponents\";\nimport Old from \"./Old\";\nimport New from \"./New\";\n\nconst Wrapper = styled.div`\n  border: 2px solid yellowgreen;\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst ParentWrapper = styled.div`\n  margin: 12px;\n  text-align: center;\n`;\n\nlet timesRendered = 0;\n\nconst Example = React.memo(() => {\n  timesRendered++;\n\n  const [clickCount, increment] = React.useState(0);\n\n  return (\n    <Wrapper>\n      <GridRow justify=\"center\">\n        <GridCol>\n          <ParentWrapper>\n            <h2>Parent</h2>\n            <AnimateOnChange animationIn=\"bounceIn\">\n              <h1>{timesRendered}</h1>\n            </AnimateOnChange>\n            <hr />\n            <PrimaryButton\n              onClick={() => {\n                increment(clickCount + 1);\n              }}\n            >\n              <h2>Render</h2>\n            </PrimaryButton>\n          </ParentWrapper>\n        </GridCol>\n      </GridRow>\n      <GridRow justify=\"center\">\n        <GridCol size={3}>\n          <Old />\n        </GridCol>\n        <GridCol size={1} />\n        <GridCol size={3}>\n          <New />\n        </GridCol>\n      </GridRow>\n    </Wrapper>\n  );\n});\n\nexport default Example;\n","import React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { okaidia } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { List, ListItem } from \"../../baseComponents\";\nimport { Slide, SlideDeck } from \"../../components\";\nimport Example from \"./example/Example\";\nimport { oldCode, memoCode } from \"./example/code\";\n\nconst Memo = () =>  (\n  <SlideDeck namedNav>\n    <Slide name=\"intro\" heading=\"Memo\" withImage>\n      <List>\n        <ListItem>When is React components updated?</ListItem>\n        <ListItem>Why is a React component updated?</ListItem>\n        <ListItem>What is the problem with functional components?</ListItem>\n      </List>\n    </Slide>\n    <Slide name=\"code\" heading=\"Memo\" withImage>\n      <SyntaxHighlighter language=\"jsx\" style={okaidia}>\n        {memoCode}\n      </SyntaxHighlighter>\n      <SyntaxHighlighter language=\"jsx\" style={okaidia}>\n        {oldCode}\n      </SyntaxHighlighter>\n    </Slide>\n    <Slide name=\"example\" heading=\"Memo\" withImage>\n      <Example />\n    </Slide>\n    <Slide name=\"summary\" heading=\"Memo\" withImage>\n      <List>\n        <ListItem customDot=\"fire\">\n          Equivalent to PureComponent or componentShouldUpdate()\n        </ListItem>\n        <ListItem customDot=\"fire\">\n          Brings us one step closer to feature parity with class and functional\n          syntax\n        </ListItem>\n        <ListItem customDot=\"skull\">Be careful with mutated objects</ListItem>\n      </List>\n    </Slide>\n  </SlideDeck>\n);\n\nexport default Memo;\n","export const oldCode = `let timesRendered = 0;\n\nconst Old = () => {\n  timesRendered++;\n  const [clickCount, increment] = React.useState(0);\n\n  return (\n    <button\n      onClick={() => increment(clickCount + 1)}\n    >\n        <h1>{timesRendered}</h1>\n    </button>\n  );\n};`;\n\nexport const memoCode = `let timesRendered = 0;\n\nconst New = React.memo(() => {\n  timesRendered++;\n  const [clickCount, increment] = React.useState(0);\n\n  return (\n    <button\n      onClick={increment(clickCount + 1)}\n    >\n        <h1>{timesRendered}</h1>\n    </button>\n  );\n});\n`;\n"],"sourceRoot":""}